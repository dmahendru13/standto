!function r(e, n, t) {
    function o(i, f) {
        if (!n[i]) {
            if (!e[i]) {
                var c = "function" == typeof require && require;
                if (!f && c) return c(i, !0);
                if (u) return u(i, !0);
                var a = new Error("Cannot find module '" + i + "'");
                throw a.code = "MODULE_NOT_FOUND", a;
            }
            var p = n[i] = {
                exports: {}
            };
            e[i][0].call(p.exports, function(r) {
                return o(e[i][1][r] || r);
            }, p, p.exports, r, e, n, t);
        }
        return n[i].exports;
    }
    for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
    return o;
}({
    1: [ function(require, module, exports) {
        "use strict";
        var navbar, Header = require("./modules/Header"), ScrollNav = require("./modules/ScrollNav");
        navbar = document.getElementsByClassName("navbar")[0].parentNode, new Header("menu"), 
        new Header("search"), new ScrollNav(navbar, 150);
    }, {
        "./modules/Header": 2,
        "./modules/ScrollNav": 4
    } ],
    2: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
                    "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), 
                Constructor;
            };
        }();
        var Helper = require("./Helper"), Header = function() {
            function Header(section) {
                !function(instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                }(this, Header), this.section = section, this.sectionBtn = document.getElementsByClassName(section + "-button")[0], 
                this.sectionWin = document.getElementsByClassName(section + "-window")[0], this.headerElem = document.getElementsByTagName("header")[0], 
                this.navbtns = document.getElementsByClassName("nav-button"), this.navwins = document.getElementsByClassName("nav-window"), 
                this.sectionBtn.addEventListener("click", this.toggleNavOption.bind(this), !1);
                var len, checkboxes = this.headerElem.querySelectorAll("input[type=checkbox]:checked"), i = 0;
                for (len = checkboxes.length; i < len; i++) checkboxes[i].checked = !1;
            }
            return _createClass(Header, [ {
                key: "toggleNavOption",
                value: function() {
                    var body = document.getElementsByTagName("body")[0], html = document.getElementsByTagName("html")[0], i = 0, sectionOpen = -1 === this.sectionBtn.className.indexOf("close-button");
                    for (i = 0; i < this.navbtns.length; i++) Helper.removeClass(this.navbtns[i], "close-button"), 
                    Helper.removeClass(this.navwins[i], "open-window"), this.navbtns[i].setAttribute("aria-expanded", "false"), 
                    Helper.removeClass(html, "menu-open"), Helper.removeClass(body, "menu-open");
                    sectionOpen && (Helper.addClass(this.sectionBtn, "close-button"), Helper.addClass(this.sectionWin, "open-window"), 
                    this.sectionBtn.setAttribute("aria-expanded", "true"), "search" === this.section ? document.getElementById("usagov-search-query").focus() : (Helper.addClass(html, "menu-open"), 
                    Helper.addClass(body, "menu-open")));
                }
            } ]), Header;
        }();
        exports.default = Header, module.exports = exports.default;
    }, {
        "./Helper": 3
    } ],
    3: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
                    "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), 
                Constructor;
            };
        }();
        var Helper = function() {
            function Helper() {
                !function(instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                }(this, Helper);
            }
            return _createClass(Helper, null, [ {
                key: "hasClass",
                value: function(el, className) {
                    return el.classList ? el.classList.contains(className) : !!el.className.match(new RegExp("(\\s|^)" + className + "(\\s|$)"));
                }
            }, {
                key: "addClass",
                value: function(el, className) {
                    el.classList ? el.classList.add(className) : this.hasClass(el, className) || (el.className += " " + className);
                }
            }, {
                key: "removeClass",
                value: function(el, className) {
                    if (el.classList) el.classList.remove(className); else if (this.hasClass(el, className)) {
                        var reg = new RegExp("(\\s|^)" + className + "(\\s|$)");
                        el.className = el.className.replace(reg, " ");
                    }
                }
            }, {
                key: "toggleClass",
                value: function(el, className) {
                    this.hasClass(el, className) ? this.removeClass(el, className) : this.addClass(el, className);
                }
            }, {
                key: "randomNumberToken",
                value: function() {
                    return new Date().valueOf();
                }
            } ]), Helper;
        }();
        exports.default = Helper, module.exports = exports.default;
    }, {} ],
    4: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
                    "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), 
                Constructor;
            };
        }();
        var Helper = require("./Helper"), ScrollNav = function() {
            function ScrollNav(elem, minTop) {
                !function(instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                }(this, ScrollNav), this.navElem = elem, this.scrollPos = void 0 !== window.pageYOffset ? window.pageYOffset : document.documentElement.scrollTop, 
                this.minTop = minTop || 0, this.minScroll = 25, window.addEventListener("scroll", this.runOnScroll.bind(this)), 
                this.runOnScroll(this);
            }
            return _createClass(ScrollNav, [ {
                key: "runOnScroll",
                value: function(e) {
                    var newPos = void 0 !== window.pageYOffset ? window.pageYOffset : document.documentElement.scrollTop;
                    document.getElementsByClassName("open-window").length || (this.scrollPos + this.minScroll <= newPos && newPos > this.minTop ? (Helper.addClass(this.navElem, "scrolled-down"), 
                    this.scrollPos = newPos) : this.scrollPos - this.minScroll >= newPos && (Helper.removeClass(this.navElem, "scrolled-down"), 
                    this.scrollPos = newPos));
                }
            } ]), ScrollNav;
        }();
        exports.default = ScrollNav, module.exports = exports.default;
    }, {
        "./Helper": 3
    } ]
}, {}, [ 1 ]), require = function r(e, n, t) {
    function o(i, f) {
        if (!n[i]) {
            if (!e[i]) {
                var c = "function" == typeof require && require;
                if (!f && c) return c(i, !0);
                if (u) return u(i, !0);
                var a = new Error("Cannot find module '" + i + "'");
                throw a.code = "MODULE_NOT_FOUND", a;
            }
            var p = n[i] = {
                exports: {}
            };
            e[i][0].call(p.exports, function(r) {
                return o(e[i][1][r] || r);
            }, p, p.exports, r, e, n, t);
        }
        return n[i].exports;
    }
    for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
    return o;
}({
    1: [ function(require, module, exports) {
        module.exports = [ {
            email: "test@test.gov"
        }, {
            email: "tjenicek0@va.gov"
        }, {
            email: "mbleasdille1@twitter.com"
        }, {
            email: "ccomford2@icq.com"
        }, {
            email: "froby3@so-net.ne.jp"
        }, {
            email: "ahatt4@feedburner.com"
        }, {
            email: "abohje5@boston.com"
        }, {
            email: "jwilden6@homestead.com"
        }, {
            email: "hseamons7@ow.ly"
        }, {
            email: "ktregea8@ibm.com"
        }, {
            email: "tkewley9@wired.com"
        }, {
            email: "splumsteada@dot.gov"
        }, {
            email: "rwydb@cyberchimps.com"
        }, {
            email: "cmutlowc@biblegateway.com"
        }, {
            email: "wwoodroofed@constantcontact.com"
        }, {
            email: "lmohamede@unc.edu"
        }, {
            email: "scrightonf@livejournal.com"
        }, {
            email: "akintzelg@is.gd"
        }, {
            email: "jnesterovh@cam.ac.uk"
        }, {
            email: "kbarbaryi@hhs.gov"
        }, {
            email: "tdaintithj@weather.com"
        }, {
            email: "mhambrightk@tumblr.com"
        }, {
            email: "aacresl@jugem.jp"
        }, {
            email: "meatem@java.com"
        }, {
            email: "gcleverleyn@addtoany.com"
        }, {
            email: "cdettmaro@hatena.ne.jp"
        }, {
            email: "gmcgeep@census.gov"
        }, {
            email: "jtourneq@geocities.com"
        }, {
            email: "wnevisonr@de.vu"
        }, {
            email: "cduchateaus@noaa.gov"
        }, {
            email: "abirtwistlet@uol.com.br"
        }, {
            email: "samossu@google.com.hk"
        }, {
            email: "rtemperleyv@ning.com"
        }, {
            email: "breyw@statcounter.com"
        }, {
            email: "edibnerx@intel.com"
        }, {
            email: "dpethricky@hexun.com"
        }, {
            email: "mbruckmannz@vistaprint.com"
        }, {
            email: "rraggett10@istockphoto.com"
        }, {
            email: "jburnall11@bbb.org"
        }, {
            email: "nren12@geocities.com"
        }, {
            email: "gstiller13@simplemachines.org"
        }, {
            email: "ccowburn14@twitter.com"
        }, {
            email: "bwavell15@sakura.ne.jp"
        }, {
            email: "jmelonby16@va.gov"
        }, {
            email: "llabitt17@soup.io"
        }, {
            email: "aorable18@whitehouse.gov"
        }, {
            email: "vfeldberger19@hp.com"
        }, {
            email: "eprobat1a@about.com"
        }, {
            email: "bjentgens1b@list-manage.com"
        }, {
            email: "bblaydon1c@lycos.com"
        }, {
            email: "rmcnab1d@google.com.au"
        }, {
            email: "ybrahan1e@columbia.edu"
        }, {
            email: "hbolles1f@lulu.com"
        }, {
            email: "eborborough1g@myspace.com"
        }, {
            email: "dbignall1h@feedburner.com"
        }, {
            email: "vogborne1i@webmd.com"
        }, {
            email: "kdudenie1j@cnet.com"
        }, {
            email: "ainglefield1k@mtv.com"
        }, {
            email: "wbaudet1l@sfgate.com"
        }, {
            email: "alucy1m@studiopress.com"
        }, {
            email: "cklimontovich1n@xinhuanet.com"
        }, {
            email: "balen1o@hud.gov"
        }, {
            email: "sdruhan1p@pbs.org"
        }, {
            email: "fmckelloch1q@newyorker.com"
        }, {
            email: "agadson1r@photobucket.com"
        }, {
            email: "wastley1s@msn.com"
        }, {
            email: "dchristie1t@bloomberg.com"
        }, {
            email: "igostyke1u@europa.eu"
        }, {
            email: "achevalier1v@howstuffworks.com"
        }, {
            email: "uveltman1w@google.com.hk"
        }, {
            email: "keynald1x@zimbio.com"
        }, {
            email: "cgiottini1y@gov.uk"
        }, {
            email: "skeysel1z@trellian.com"
        }, {
            email: "bbasset20@angelfire.com"
        }, {
            email: "dlong21@prlog.org"
        }, {
            email: "mmoynihan22@sitemeter.com"
        }, {
            email: "jholligan23@gravatar.com"
        }, {
            email: "lmacphee24@wisc.edu"
        }, {
            email: "ealred25@hc360.com"
        }, {
            email: "lchaffer26@newyorker.com"
        }, {
            email: "crealy27@ox.ac.uk"
        }, {
            email: "jderrico28@fc2.com"
        }, {
            email: "vdavitt29@woothemes.com"
        }, {
            email: "jcubuzzi2a@yahoo.co.jp"
        }, {
            email: "lgroundwater2b@addthis.com"
        }, {
            email: "jtirrell2c@unblog.fr"
        }, {
            email: "nprantoni2d@geocities.com"
        }, {
            email: "mferraretto2e@dropbox.com"
        }, {
            email: "rscyone2f@themeforest.net"
        }, {
            email: "bwalford2g@comcast.net"
        }, {
            email: "lvedstra2h@techcrunch.com"
        }, {
            email: "snorthen2i@nbcnews.com"
        }, {
            email: "hpozer2j@arizona.edu"
        }, {
            email: "egalway2k@wikispaces.com"
        }, {
            email: "istapells2l@lycos.com"
        }, {
            email: "aeaslea2m@alexa.com"
        }, {
            email: "fellgood2n@youku.com"
        }, {
            email: "fdepka2o@omniture.com"
        }, {
            email: "rharbin2p@reddit.com"
        }, {
            email: "mvedyaev2q@virginia.edu"
        }, {
            email: "rgodfroy2r@fastcompany.com"
        } ];
    }, {} ],
    2: [ function(require, module, exports) {
        module.exports = [ {
            title: "Teklist",
            date: "OCT. 28, 1964",
            networks: [ {
                name: "Product Management",
                link: "www.google.com"
            } ]
        }, {
            title: "Buzzdog",
            date: "JUN. 26, 1889",
            networks: [ {
                name: "Legal",
                link: "www.google.com"
            } ]
        }, {
            title: "Realpoint",
            date: "JAN. 14, 1912",
            networks: [ {
                name: "Engineering",
                link: "www.google.com"
            } ]
        }, {
            title: "Roomm",
            date: "JUL. 15, 1941",
            networks: [ {
                name: "Marketing",
                link: "www.google.com"
            } ]
        }, {
            title: "Skyvu",
            date: "JUL. 11, 1540",
            networks: [ {
                name: "Legal",
                link: "www.google.com"
            } ]
        }, {
            title: "Kaymbo",
            date: "FEB. 17, 1878",
            networks: [ {
                name: "Support",
                link: "www.google.com"
            } ]
        }, {
            title: "Dablist",
            date: "SEP. 03, 1958",
            networks: [ {
                name: "Legal",
                link: "www.google.com"
            } ]
        }, {
            title: "Wikivu",
            date: "OCT. 09, 1940",
            networks: [ {
                name: "Engineering",
                link: "www.google.com"
            } ]
        }, {
            title: "Kimia",
            date: "APR. 23, 1647",
            networks: [ {
                name: "Human Resources",
                link: "www.google.com"
            } ]
        }, {
            title: "Twitternation",
            date: "JUL. 05, 1899",
            networks: [ {
                name: "Human Resources",
                link: "www.google.com"
            } ]
        }, {
            title: "Tagchat",
            date: "MAR. 14, 1643",
            networks: [ {
                name: "Human Resources",
                link: "www.google.com"
            } ]
        }, {
            title: "Eimbee",
            date: "MAY 24, 1965",
            networks: [ {
                name: "Accounting",
                link: "www.google.com"
            } ]
        } ];
    }, {} ],
    3: [ function(require, module, exports) {
        "use strict";
        require("./globals/modules/Helper");
        var searchForm, Archive = require("../_data/networks/2-archive.json");
        searchForm = document.getElementById("standto_search_form"), function() {
            for (var archive = Archive, list = document.getElementById("archive-results"), i = 0; i < archive.length; i++) {
                var li = document.createElement("li");
                li.innerHTML = '<span class="date archive-date">' + archive[i].date + "</span", 
                li.innerHTML += '<a class="archive-link" href="' + archive[i].networks[0].link + '" target="">' + archive[i].title + "</a>", 
                list.appendChild(li);
            }
        }(), searchForm.onkeyup = function() {
            for (var filter = document.getElementById("archive-search-input").value.toUpperCase(), li = document.getElementById("archive-results").getElementsByTagName("li"), i = 0; i < li.length; i++) {
                var a = li[i].getElementsByTagName("a")[0];
                -1 < (a.textContent || a.innerText).toUpperCase().indexOf(filter) ? li[i].style.display = "" : li[i].style.display = "none";
            }
        }, searchForm.onsubmit = function(e) {
            return "" === this.query.value ? (e.preventDefault(), !1) : (this.query.value = "stand to " + this.query.value, 
            !0);
        };
    }, {
        "../_data/networks/2-archive.json": 2,
        "./globals/modules/Helper": "Helper"
    } ],
    4: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
                    "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), 
                Constructor;
            };
        }();
        var Helper = require("./Helper"), CustomSelect = function() {
            function CustomSelect(el) {
                !function(instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                }(this, CustomSelect), this.cselect = el, this.opened = !1, this.createOverlayElement(), 
                this.createOptionsElement(), document.body.addEventListener("click", this.hideOptions.bind(this));
            }
            return _createClass(CustomSelect, [ {
                key: "toggleOptions",
                value: function() {
                    this.opened ? this.opened = !1 : this.opened = !0, Helper.toggleClass(this.cselect, "show-options");
                }
            }, {
                key: "hideOptions",
                value: function(e) {
                    this.opened && "custom-overlay" !== e.target.className && (Helper.removeClass(this.cselect, "show-options"), 
                    this.opened = !1);
                }
            }, {
                key: "createOverlayElement",
                value: function() {
                    var overlay = document.createElement("div");
                    overlay.setAttribute("class", "custom-overlay"), overlay.addEventListener("click", this.toggleOptions.bind(this)), 
                    this.cselect.appendChild(overlay);
                }
            }, {
                key: "createOptionsElement",
                value: function() {
                    var optionLi, i, evt = document.createEvent("HTMLEvents"), select = this.cselect.getElementsByTagName("select")[0], options = this.cselect.getElementsByTagName("option"), optionBox = document.createElement("div"), optionUl = document.createElement("ul");
                    for (optionBox.setAttribute("class", "custom-options"), optionBox.appendChild(optionUl), 
                    i = 0; i < options.length; i++) (optionLi = document.createElement("li")).setAttribute("data-value", options[i].value), 
                    optionLi.setAttribute("class", "custom-select-option"), optionLi.innerHTML = options[i].textContent, 
                    optionLi.addEventListener("click", function() {
                        evt.initEvent("change", !1, !0), select.value = this.getAttribute("data-value"), 
                        select.dispatchEvent(evt);
                    }), optionUl.appendChild(optionLi);
                    this.cselect.appendChild(optionBox);
                }
            } ]), CustomSelect;
        }();
        exports.default = CustomSelect, module.exports = exports.default;
    }, {
        "./Helper": "Helper"
    } ],
    5: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
            return typeof obj;
        } : function(obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        }, _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
                    "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), 
                Constructor;
            };
        }();
        var Waypoint = require("./commonjs.waypoints.js"), Helper = require("./Helper"), SocialBar = function() {
            function SocialBar() {
                !function(instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                }(this, SocialBar);
            }
            return _createClass(SocialBar, null, [ {
                key: "initWaypoint",
                value: function(waypointElement) {
                    var socialBar = document.getElementsByClassName("social-bar")[0];
                    "object" === (void 0 === waypointElement ? "undefined" : _typeof(waypointElement)) && new Waypoint({
                        element: waypointElement,
                        handler: function(direction) {
                            "up" === direction ? Helper.removeClass(socialBar, "scrolled-down") : "down" === direction && Helper.addClass(socialBar, "scrolled-down");
                        },
                        offset: "100%"
                    });
                }
            } ]), SocialBar;
        }();
        exports.default = SocialBar, module.exports = exports.default;
    }, {
        "./Helper": "Helper",
        "./commonjs.waypoints.js": 8
    } ],
    6: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
                    "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), 
                Constructor;
            };
        }();
        var Helper = require("./Helper"), SubNav = function() {
            function SubNav(el, callbackFn, options) {
                !function(instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                }(this, SubNav);
                var i, j, mDiv, hashItem, subnavCheck, menuLink, mItems, _this = this, url = document.URL.split("#")[0], hash = window.location.hash.toLowerCase(), docElem = document.documentElement, winW = Math.max(docElem.clientWidth, window.innerWidth || 0);
                for (this.defaults = this.initDefaults(options), this.callback = callbackFn, this.subnav = el, 
                subnavCheck = this.subnav.getElementsByTagName("input"), mItems = this.subnav.querySelectorAll("ul a"), 
                this.menuItems = {}, this.menuDivs = {}, this.firstHash = "", this.currentSelect = "", 
                this.toggleLabel = this.subnav.getElementsByTagName("label"), 0 < this.toggleLabel.length ? this.toggleLabel = this.toggleLabel[0] : this.toggleLabel = document.createElement("div"), 
                this.toggleLabelDefault = this.toggleLabel.innerHTML, 0 < subnavCheck.length && "checkbox" === subnavCheck[0].type && (subnavCheck = subnavCheck[0], 
                winW <= 992 && (this.defaults.initializeOpen = !1), subnavCheck.checked = this.defaults.initializeOpen), 
                i = 0; i < mItems.length; i++) {
                    for (0 === (mDiv = "" === (menuLink = mItems[i].getAttribute("href").toLowerCase()) ? [] : document.getElementsByClassName(menuLink.substr(1))).length && mItems[i].getAttribute("data-id") ? (mDiv = document.getElementsByClassName(mItems[i].getAttribute("data-id")), 
                    menuLink = "#" + mItems[i].getAttribute("data-id")) : 0 === mDiv.length && mItems[i].id && (mDiv = document.getElementsByClassName(mItems[i].id), 
                    menuLink = "#" + mItems[i].id), menuLink === hash && hash && (hashItem = menuLink), 
                    0 === i && (this.firstHash = menuLink), this.menuItems[menuLink] = mItems[i], this.menuDivs[menuLink] = mDiv, 
                    j = 0; j < mDiv.length; j++) Helper.addClass(mDiv[j], "subnav-selectable");
                    mItems[i].onclick = function(e) {
                        var hashval = this.getAttribute("href"), page = location.pathname + location.search + hashval, linkid = this.getAttribute("data-id") ? this.getAttribute("data-id") : this.id, hashLink = "" === hashval ? "#" + linkid : hashval;
                        _this.defaults.preventDefault && e.preventDefault(), "" === hashval && (hashval = url), 
                        history.pushState && history.pushState(null, document.title, hashval), "undefined" != typeof ga && ga("send", "event", "subnav", "click", page), 
                        _this.setMenu(hashLink), subnavCheck && (subnavCheck.checked = !1);
                    };
                }
                window.addEventListener("hashchange", function(e) {
                    var i, navwins, navcls, body = document.getElementsByTagName("body")[0], html = document.getElementsByTagName("html")[0], nav = document.getElementsByTagName("header");
                    if (_this.setMenu(location.hash, !0), subnavCheck && (subnavCheck.checked = !1), 
                    Helper.removeClass(html, "menu-open"), Helper.removeClass(body, "menu-open"), nav.length) {
                        for (navcls = nav[0].getElementsByClassName("close-button"), navwins = nav[0].getElementsByClassName("open-window"), 
                        i = navcls.length - 1; 0 <= i; i--) Helper.removeClass(navcls[i], "close-button");
                        for (i = navwins.length - 1; 0 <= i; i--) Helper.removeClass(navwins[i], "open-window");
                    }
                }, !1), this.defaults.initializeEmpty ? this.setMenu("empty") : hashItem ? this.setMenu(hashItem) : this.setMenu(this.firstHash);
            }
            return _createClass(SubNav, [ {
                key: "initDefaults",
                value: function(options) {
                    var key, defaults = {
                        preventDefault: !0,
                        persistentLabel: !1,
                        initializeEmpty: !1,
                        initializeOpen: !1
                    };
                    for (key in options) defaults.hasOwnProperty(key) && (defaults[key] = options[key]);
                    return defaults;
                }
            }, {
                key: "setMenu",
                value: function(hashIndex, toTop) {
                    var i, active, selected;
                    if ((this.menuItems[hashIndex] || "empty" === hashIndex) && this.currentSelect !== hashIndex) {
                        for (active = this.subnav.getElementsByClassName("active"), selected = document.getElementsByClassName("subnav-selected"), 
                        i = active.length - 1; 0 <= i; i--) Helper.removeClass(active[i], "active");
                        for (i = selected.length - 1; 0 <= i; i--) Helper.removeClass(selected[i], "subnav-selected");
                        "empty" !== hashIndex && (Helper.addClass(this.menuItems[hashIndex], "active"), 
                        this.menuDivs[hashIndex] ? (this.defaults.persistentLabel || (this.toggleLabel.innerHTML = this.menuItems[hashIndex].innerHTML), 
                        this.showMenuDiv(this.menuDivs[hashIndex], !0), toTop && window.scrollTo(0, 0)) : this.toggleLabel.innerHTML = this.toggleLabelDefault, 
                        "function" == typeof this.callback && this.callback(this.menuItems[hashIndex])), 
                        this.currentSelect = hashIndex;
                    }
                }
            }, {
                key: "showMenuDiv",
                value: function(divs, add) {
                    var i;
                    for (i = divs.length - 1; 0 <= i; i--) !0 === add ? Helper.addClass(divs[i], "subnav-selected") : Helper.removeClass(divs[i], "subnav-selected");
                }
            } ]), SubNav;
        }();
        exports.default = SubNav, module.exports = exports.default;
    }, {
        "./Helper": "Helper"
    } ],
    7: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
                    "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), 
                Constructor;
            };
        }();
        var Helper = require("./Helper"), Validity = function() {
            function Validity(form) {
                var submit = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "", normalSubmit = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
                !function(instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                }(this, Validity);
                var len, i = 0, $this = this;
                for ($this.validationFn = "function" == typeof form.checkValidity ? function(el) {
                    return el.checkValidity();
                } : function(el) {
                    return $this.isValid(el);
                }, i = 0, len = form.elements.length; i < len; i++) $this.validateOnBlur(form.elements[i]);
                form.validate = function() {
                    var len, j = 0, invalid = 0;
                    for (j = 0, len = this.elements.length; j < len; j++) $this.markField($this.validationFn(this.elements[j]), this.elements[j]) || invalid++;
                    return !(0 < invalid) && (!normalSubmit || void this.submit());
                }, form.onsubmit = submit || function() {
                    if (!this.validate()) return !1;
                };
            }
            return _createClass(Validity, [ {
                key: "validateOnBlur",
                value: function(el) {
                    var $this = this;
                    "checkbox" === el.getAttribute("type") ? el.addEventListener("click", function() {
                        $this.markField($this.validationFn(this), this);
                    }, !1) : el.addEventListener("blur", function() {
                        Helper.hasClass(this, "no-validate") || $this.markField($this.validationFn(this), this);
                    }, !1);
                }
            }, {
                key: "markField",
                value: function(valid, el) {
                    return valid ? (Helper.hasClass(el, "invalid") && Helper.removeClass(el, "invalid"), 
                    !0) : (el.setCustomValidity(""), Helper.addClass(el, "invalid"), !1);
                }
            }, {
                key: "isValid",
                value: function(el) {
                    return "email" === el.getAttribute("type") ? !this.isEmpty(el) && this.validateEmail(el) && !this.isPlaceholder(el) : "tel" === el.getAttribute("type") ? !this.isEmpty(el) && this.validatePhone(el) && !this.isPlaceholder(el) : "url" === el.getAttribute("type") ? !this.isEmpty(el) && this.validateUrl(el) && !this.isPlaceholder(el) : "checkbox" === el.getAttribute("type") ? this.validateCheckbox(el) : !this.isEmpty(el) && !this.isPlaceholder(el);
                }
            }, {
                key: "validateEmail",
                value: function(el) {
                    return /^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/.test(el.value);
                }
            }, {
                key: "validatePhone",
                value: function(el) {
                    return /^(?:\(\d{3}\)|\d{3})[- ]?\d{3}[- ]?\d{4}$/.test(el.value);
                }
            }, {
                key: "validateUrl",
                value: function(el) {
                    return /^(https?:\/\/)?(\w+(-\w+)*\.){2,}[a-z]{2,}(:[0-9]+)?(\/[\w\-]+)*(\/([\w\-\x40$\.\x2B!*\x27(),]|(%[A-Z0-9]{2}))+)?((\.[a-z]{2,})|\/)?((\?[\w\-]+=([\w\-\x40$\.\x2B!*\x27(),]|(%[A-Z0-9]{2}))+)(\x26[\w\-]+=([\w\-\x40$\.\x2B!*\x27(),]|(%[A-Z0-9]{2}))+)*)?(#([\w\-\x40$\.\x2B!*\x27(),]|(%[A-Z0-9]{2}))+)?$/gi.test(el.value);
                }
            }, {
                key: "validateCheckbox",
                value: function(el) {
                    return el.checked;
                }
            }, {
                key: "isEmpty",
                value: function(el) {
                    return 0 === el.value.length || !el.value.trim();
                }
            }, {
                key: "isPlaceholder",
                value: function(el) {
                    return el.getAttribute("placeholder") && el.value === el.getAttribute("placeholder");
                }
            } ]), Validity;
        }();
        exports.default = Validity, module.exports = exports.default;
    }, {
        "./Helper": "Helper"
    } ],
    8: [ function(require, module, exports) {
        "use strict";
        var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
            return typeof obj;
        } : function(obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        }, keyCounter = 0, allWaypoints = {};
        function Waypoint(options) {
            if (!options) throw new Error("No options passed to Waypoint constructor");
            if (!options.element) throw new Error("No element option passed to Waypoint constructor");
            if (!options.handler) throw new Error("No handler option passed to Waypoint constructor");
            this.key = "waypoint-" + keyCounter, this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options), 
            this.element = this.options.element, this.adapter = new Waypoint.Adapter(this.element), 
            this.callback = options.handler, this.axis = this.options.horizontal ? "horizontal" : "vertical", 
            this.enabled = this.options.enabled, this.triggerPoint = null, this.group = Waypoint.Group.findOrCreate({
                name: this.options.group,
                axis: this.axis
            }), this.context = Waypoint.Context.findOrCreateByElement(this.options.context), 
            Waypoint.offsetAliases[this.options.offset] && (this.options.offset = Waypoint.offsetAliases[this.options.offset]), 
            this.group.add(this), this.context.add(this), allWaypoints[this.key] = this, keyCounter += 1;
        }
        function requestAnimationFrameShim(callback) {
            window.setTimeout(callback, 1e3 / 60);
        }
        Waypoint.prototype.queueTrigger = function(direction) {
            this.group.queueTrigger(this, direction);
        }, Waypoint.prototype.trigger = function(args) {
            this.enabled && this.callback && this.callback.apply(this, args);
        }, Waypoint.prototype.destroy = function() {
            this.context.remove(this), this.group.remove(this), delete allWaypoints[this.key];
        }, Waypoint.prototype.disable = function() {
            return this.enabled = !1, this;
        }, Waypoint.prototype.enable = function() {
            return this.context.refresh(), this.enabled = !0, this;
        }, Waypoint.prototype.next = function() {
            return this.group.next(this);
        }, Waypoint.prototype.previous = function() {
            return this.group.previous(this);
        }, Waypoint.invokeAll = function(method) {
            var allWaypointsArray = [];
            for (var waypointKey in allWaypoints) allWaypointsArray.push(allWaypoints[waypointKey]);
            for (var i = 0, end = allWaypointsArray.length; i < end; i++) allWaypointsArray[i][method]();
        }, Waypoint.destroyAll = function() {
            Waypoint.invokeAll("destroy");
        }, Waypoint.disableAll = function() {
            Waypoint.invokeAll("disable");
        }, Waypoint.enableAll = function() {
            Waypoint.invokeAll("enable");
        }, Waypoint.refreshAll = function() {
            Waypoint.Context.refreshAll();
        }, Waypoint.viewportHeight = function() {
            return window.innerHeight || document.documentElement.clientHeight;
        }, Waypoint.viewportWidth = function() {
            return document.documentElement.clientWidth;
        }, Waypoint.adapters = [], Waypoint.defaults = {
            context: window,
            continuous: !0,
            enabled: !0,
            group: "default",
            horizontal: !1,
            offset: 0
        }, Waypoint.offsetAliases = {
            "bottom-in-view": function() {
                return this.context.innerHeight() - this.adapter.outerHeight();
            },
            "right-in-view": function() {
                return this.context.innerWidth() - this.adapter.outerWidth();
            }
        }, window.Waypoint = Waypoint;
        keyCounter = 0;
        var contexts = {}, oldWindowLoad = (Waypoint = window.Waypoint, window.onload);
        function Context(element) {
            this.element = element, this.Adapter = Waypoint.Adapter, this.adapter = new this.Adapter(element), 
            this.key = "waypoint-context-" + keyCounter, this.didScroll = !1, this.didResize = !1, 
            this.oldScroll = {
                x: this.adapter.scrollLeft(),
                y: this.adapter.scrollTop()
            }, this.waypoints = {
                vertical: {},
                horizontal: {}
            }, element.waypointContextKey = this.key, contexts[element.waypointContextKey] = this, 
            keyCounter += 1, this.createThrottledScrollHandler(), this.createThrottledResizeHandler();
        }
        function byTriggerPoint(a, b) {
            return a.triggerPoint - b.triggerPoint;
        }
        function byReverseTriggerPoint(a, b) {
            return b.triggerPoint - a.triggerPoint;
        }
        Context.prototype.add = function(waypoint) {
            var axis = waypoint.options.horizontal ? "horizontal" : "vertical";
            this.waypoints[axis][waypoint.key] = waypoint, this.refresh();
        }, Context.prototype.checkEmpty = function() {
            var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal), verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical);
            horizontalEmpty && verticalEmpty && (this.adapter.off(".waypoints"), delete contexts[this.key]);
        }, Context.prototype.createThrottledResizeHandler = function() {
            var self = this;
            function resizeHandler() {
                self.handleResize(), self.didResize = !1;
            }
            this.adapter.on("resize.waypoints", function() {
                self.didResize || (self.didResize = !0, Waypoint.requestAnimationFrame(resizeHandler));
            });
        }, Context.prototype.createThrottledScrollHandler = function() {
            var self = this;
            function scrollHandler() {
                self.handleScroll(), self.didScroll = !1;
            }
            this.adapter.on("scroll.waypoints", function() {
                self.didScroll && !Waypoint.isTouch || (self.didScroll = !0, Waypoint.requestAnimationFrame(scrollHandler));
            });
        }, Context.prototype.handleResize = function() {
            Waypoint.Context.refreshAll();
        }, Context.prototype.handleScroll = function() {
            var triggeredGroups = {}, axes = {
                horizontal: {
                    newScroll: this.adapter.scrollLeft(),
                    oldScroll: this.oldScroll.x,
                    forward: "right",
                    backward: "left"
                },
                vertical: {
                    newScroll: this.adapter.scrollTop(),
                    oldScroll: this.oldScroll.y,
                    forward: "down",
                    backward: "up"
                }
            };
            for (var axisKey in axes) {
                var axis = axes[axisKey], direction = axis.newScroll > axis.oldScroll ? axis.forward : axis.backward;
                for (var waypointKey in this.waypoints[axisKey]) {
                    var waypoint = this.waypoints[axisKey][waypointKey], wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint, nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint;
                    (wasBeforeTriggerPoint && nowAfterTriggerPoint || !wasBeforeTriggerPoint && !nowAfterTriggerPoint) && (waypoint.queueTrigger(direction), 
                    triggeredGroups[waypoint.group.id] = waypoint.group);
                }
            }
            for (var groupKey in triggeredGroups) triggeredGroups[groupKey].flushTriggers();
            this.oldScroll = {
                x: axes.horizontal.newScroll,
                y: axes.vertical.newScroll
            };
        }, Context.prototype.innerHeight = function() {
            return this.element == this.element.window ? Waypoint.viewportHeight() : this.adapter.innerHeight();
        }, Context.prototype.remove = function(waypoint) {
            delete this.waypoints[waypoint.axis][waypoint.key], this.checkEmpty();
        }, Context.prototype.innerWidth = function() {
            return this.element == this.element.window ? Waypoint.viewportWidth() : this.adapter.innerWidth();
        }, Context.prototype.destroy = function() {
            var allWaypoints = [];
            for (var axis in this.waypoints) for (var waypointKey in this.waypoints[axis]) allWaypoints.push(this.waypoints[axis][waypointKey]);
            for (var i = 0, end = allWaypoints.length; i < end; i++) allWaypoints[i].destroy();
        }, Context.prototype.refresh = function() {
            var axes, isWindow = this.element == this.element.window, contextOffset = this.adapter.offset(), triggeredGroups = {};
            for (var axisKey in this.handleScroll(), axes = {
                horizontal: {
                    contextOffset: isWindow ? 0 : contextOffset.left,
                    contextScroll: isWindow ? 0 : this.oldScroll.x,
                    contextDimension: this.innerWidth(),
                    oldScroll: this.oldScroll.x,
                    forward: "right",
                    backward: "left",
                    offsetProp: "left"
                },
                vertical: {
                    contextOffset: isWindow ? 0 : contextOffset.top,
                    contextScroll: isWindow ? 0 : this.oldScroll.y,
                    contextDimension: this.innerHeight(),
                    oldScroll: this.oldScroll.y,
                    forward: "down",
                    backward: "up",
                    offsetProp: "top"
                }
            }) {
                var axis = axes[axisKey];
                for (var waypointKey in this.waypoints[axisKey]) {
                    var contextModifier, wasBeforeScroll, nowAfterScroll, triggeredForward, waypoint = this.waypoints[axisKey][waypointKey], adjustment = waypoint.options.offset, oldTriggerPoint = waypoint.triggerPoint, elementOffset = 0, freshWaypoint = null == oldTriggerPoint;
                    waypoint.element !== waypoint.element.window && (elementOffset = waypoint.adapter.offset()[axis.offsetProp]), 
                    "function" == typeof adjustment ? adjustment = adjustment.apply(waypoint) : "string" == typeof adjustment && (adjustment = parseFloat(adjustment), 
                    -1 < waypoint.options.offset.indexOf("%") && (adjustment = Math.ceil(axis.contextDimension * adjustment / 100))), 
                    contextModifier = axis.contextScroll - axis.contextOffset, waypoint.triggerPoint = elementOffset + contextModifier - adjustment, 
                    wasBeforeScroll = oldTriggerPoint < axis.oldScroll, nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll, 
                    triggeredForward = !wasBeforeScroll && !nowAfterScroll, !freshWaypoint && (wasBeforeScroll && nowAfterScroll) ? (waypoint.queueTrigger(axis.backward), 
                    triggeredGroups[waypoint.group.id] = waypoint.group) : !freshWaypoint && triggeredForward ? (waypoint.queueTrigger(axis.forward), 
                    triggeredGroups[waypoint.group.id] = waypoint.group) : freshWaypoint && axis.oldScroll >= waypoint.triggerPoint && (waypoint.queueTrigger(axis.forward), 
                    triggeredGroups[waypoint.group.id] = waypoint.group);
                }
            }
            for (var groupKey in triggeredGroups) triggeredGroups[groupKey].flushTriggers();
            return this;
        }, Context.findOrCreateByElement = function(element) {
            return Context.findByElement(element) || new Context(element);
        }, Context.refreshAll = function() {
            for (var contextId in contexts) contexts[contextId].refresh();
        }, Context.findByElement = function(element) {
            return contexts[element.waypointContextKey];
        }, window.onload = function() {
            oldWindowLoad && oldWindowLoad(), Context.refreshAll();
        }, Waypoint.requestAnimationFrame = function(callback) {
            (window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || requestAnimationFrameShim).call(window, callback);
        }, Waypoint.Context = Context;
        var groups = {
            vertical: {},
            horizontal: {}
        };
        Waypoint = window.Waypoint;
        function Group(options) {
            this.name = options.name, this.axis = options.axis, this.id = this.name + "-" + this.axis, 
            this.waypoints = [], this.clearTriggerQueues(), groups[this.axis][this.name] = this;
        }
        Group.prototype.add = function(waypoint) {
            this.waypoints.push(waypoint);
        }, Group.prototype.clearTriggerQueues = function() {
            this.triggerQueues = {
                up: [],
                down: [],
                left: [],
                right: []
            };
        }, Group.prototype.flushTriggers = function() {
            for (var direction in this.triggerQueues) {
                var waypoints = this.triggerQueues[direction], reverse = "up" === direction || "left" === direction;
                waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint);
                for (var i = 0, end = waypoints.length; i < end; i += 1) {
                    var waypoint = waypoints[i];
                    (waypoint.options.continuous || i === waypoints.length - 1) && waypoint.trigger([ direction ]);
                }
            }
            this.clearTriggerQueues();
        }, Group.prototype.next = function(waypoint) {
            this.waypoints.sort(byTriggerPoint);
            var index = Waypoint.Adapter.inArray(waypoint, this.waypoints);
            return index === this.waypoints.length - 1 ? null : this.waypoints[index + 1];
        }, Group.prototype.previous = function(waypoint) {
            this.waypoints.sort(byTriggerPoint);
            var index = Waypoint.Adapter.inArray(waypoint, this.waypoints);
            return index ? this.waypoints[index - 1] : null;
        }, Group.prototype.queueTrigger = function(waypoint, direction) {
            this.triggerQueues[direction].push(waypoint);
        }, Group.prototype.remove = function(waypoint) {
            var index = Waypoint.Adapter.inArray(waypoint, this.waypoints);
            -1 < index && this.waypoints.splice(index, 1);
        }, Group.prototype.first = function() {
            return this.waypoints[0];
        }, Group.prototype.last = function() {
            return this.waypoints[this.waypoints.length - 1];
        }, Group.findOrCreate = function(options) {
            return groups[options.axis][options.name] || new Group(options);
        }, Waypoint.Group = Group;
        var Waypoint = window.Waypoint;
        function isWindow(element) {
            return element === element.window;
        }
        function getWindow(element) {
            return isWindow(element) ? element : element.defaultView;
        }
        function NoFrameworkAdapter(element) {
            this.element = element, this.handlers = {};
        }
        NoFrameworkAdapter.prototype.innerHeight = function() {
            return isWindow(this.element) ? this.element.innerHeight : this.element.clientHeight;
        }, NoFrameworkAdapter.prototype.innerWidth = function() {
            return isWindow(this.element) ? this.element.innerWidth : this.element.clientWidth;
        }, NoFrameworkAdapter.prototype.off = function(event, handler) {
            function removeListeners(element, listeners, handler) {
                for (var i = 0, end = listeners.length - 1; i < end; i++) {
                    var listener = listeners[i];
                    handler && handler !== listener || element.removeEventListener(listener);
                }
            }
            var eventParts = event.split("."), eventType = eventParts[0], namespace = eventParts[1], element = this.element;
            if (namespace && this.handlers[namespace] && eventType) removeListeners(element, this.handlers[namespace][eventType], handler), 
            this.handlers[namespace][eventType] = []; else if (eventType) for (var ns in this.handlers) removeListeners(element, this.handlers[ns][eventType] || [], handler), 
            this.handlers[ns][eventType] = []; else if (namespace && this.handlers[namespace]) {
                for (var type in this.handlers[namespace]) removeListeners(element, this.handlers[namespace][type], handler);
                this.handlers[namespace] = {};
            }
        }, NoFrameworkAdapter.prototype.offset = function() {
            if (!this.element.ownerDocument) return null;
            var documentElement = this.element.ownerDocument.documentElement, win = getWindow(this.element.ownerDocument), rect = {
                top: 0,
                left: 0
            };
            return this.element.getBoundingClientRect && (rect = this.element.getBoundingClientRect()), 
            {
                top: rect.top + win.pageYOffset - documentElement.clientTop,
                left: rect.left + win.pageXOffset - documentElement.clientLeft
            };
        }, NoFrameworkAdapter.prototype.on = function(event, handler) {
            var eventParts = event.split("."), eventType = eventParts[0], namespace = eventParts[1] || "__default", nsHandlers = this.handlers[namespace] = this.handlers[namespace] || {};
            (nsHandlers[eventType] = nsHandlers[eventType] || []).push(handler), this.element.addEventListener(eventType, handler);
        }, NoFrameworkAdapter.prototype.outerHeight = function(includeMargin) {
            var computedStyle, height = this.innerHeight();
            return includeMargin && !isWindow(this.element) && (computedStyle = window.getComputedStyle(this.element), 
            height += parseInt(computedStyle.marginTop, 10), height += parseInt(computedStyle.marginBottom, 10)), 
            height;
        }, NoFrameworkAdapter.prototype.outerWidth = function(includeMargin) {
            var computedStyle, width = this.innerWidth();
            return includeMargin && !isWindow(this.element) && (computedStyle = window.getComputedStyle(this.element), 
            width += parseInt(computedStyle.marginLeft, 10), width += parseInt(computedStyle.marginRight, 10)), 
            width;
        }, NoFrameworkAdapter.prototype.scrollLeft = function() {
            var win = getWindow(this.element);
            return win ? win.pageXOffset : this.element.scrollLeft;
        }, NoFrameworkAdapter.prototype.scrollTop = function() {
            var win = getWindow(this.element);
            return win ? win.pageYOffset : this.element.scrollTop;
        }, NoFrameworkAdapter.extend = function() {
            var args = Array.prototype.slice.call(arguments);
            function merge(target, obj) {
                if ("object" === (void 0 === target ? "undefined" : _typeof(target)) && "object" === (void 0 === obj ? "undefined" : _typeof(obj))) for (var key in obj) obj.hasOwnProperty(key) && (target[key] = obj[key]);
                return target;
            }
            for (var i = 1, end = args.length; i < end; i++) merge(args[0], args[i]);
            return args[0];
        }, NoFrameworkAdapter.inArray = function(element, array, i) {
            return null == array ? -1 : array.indexOf(element, i);
        }, NoFrameworkAdapter.isEmptyObject = function(obj) {
            for (var name in obj) return !1;
            return !0;
        }, Waypoint.adapters.push({
            name: "noframework",
            Adapter: NoFrameworkAdapter
        }), Waypoint.Adapter = NoFrameworkAdapter, module.exports = Waypoint;
    }, {} ],
    9: [ function(require, module, exports) {
        "use strict";
        var items, title, date, link, categories, category, categoryLink, newsItem, months, validCategories, tag, flipCard, pubDate1, pubDate2, header, customSelect, form, newsList, flipButtons, CustomSelect = require("./globals/modules/CustomSelect"), Validity = require("./globals/modules/Validity");
        (header = document.getElementsByClassName("navbar")).length && header[0].clientHeight, 
        customSelect = document.getElementsByClassName("custom-select"), form = document.getElementById("sm-account-form"), 
        newsList = $(".news-list"), flipButtons = $(".flip-btn"), form && new Validity(document.forms["sm-account-form"], "", !1), 
        0 < customSelect.length && new CustomSelect(customSelect[0]), 0 < newsList.length && (months = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ], 
        validCategories = [ "content", "metrics", "socialmedia" ], $.ajax({
            url: "https://api.army.mil/api/v1/digital/feed",
            dataType: "xml",
            success: function(data) {
                items = (items = (items = $(data).find("item").filter(function(index, item) {
                    return !0;
                })).slice(0, 3)).sort(function(a, b) {
                    return pubDate1 = $(a).find("pubDate").text(), pubDate2 = $(b).find("pubDate").text(), 
                    new Date(pubDate2) - new Date(pubDate1);
                }), $(".empty").remove(), $.each(items, function() {
                    title = $(this).find("title").text(), date = $(this).find("pubDate").text(), $(this).find("description").text(), 
                    link = $(this).find("link").text(), categories = $(this).find("category"), newsItem = "", 
                    newsItem += '<div class="news-item">', newsItem += '<div class="news-inner">', newsItem += '<div class="news-right">', 
                    newsItem += '<div class="main-content">', date = new Date(date), date = months[date.getMonth()] + " " + date.getDate() + ", " + date.getFullYear(), 
                    newsItem += '<p class="date">' + date + "</p>", newsItem += '<p class="sections">', 
                    categories = _.uniq(categories, function(a) {
                        return $(a).text().toLowerCase();
                    }), $.each(categories, function() {
                        category = (category = $(this).text().toLowerCase()).trim().replace(" ", ""), tag = "", 
                        -1 < validCategories.indexOf(category) && (categoryLink = category.trim().replace(" ", ""), 
                        "socialmedia" === category && (category = "Social Media"), tag = '<a href="https://www.digitalgov.gov/category/' + categoryLink + '">' + category + "</a>"), 
                        newsItem += tag;
                    }), newsItem += "</p>", newsItem += '<p class="title"><a title="' + title + '" href="' + link + '">' + title + "</a></p>", 
                    newsItem += "</div>", newsItem += '<p class="more"><a title="' + title + '" href="' + link + '">READ MORE</a></p>', 
                    newsItem += "</div>", newsItem += "</div>", newsItem += "</div>", newsList.append(newsItem);
                });
            }
        })), 0 < flipButtons.length && $(flipButtons).each(function(index) {
            $(this).on("click", function() {
                flipCard = $(this).parent().parent().parent(), $(flipCard).hasClass("applyflip") ? $(flipCard).removeClass("applyflip") : $(flipCard).addClass("applyflip");
            });
        });
    }, {
        "./globals/modules/CustomSelect": 4,
        "./globals/modules/Validity": 7
    } ],
    10: [ function(require, module, exports) {
        "use strict";
        var SocialBar = require("./globals/modules/SocialBar"), Helper = require("./globals/modules/Helper"), Emails = require("../_data/email-dummy-data/emails.json");
        !function() {
            var i, subscribeLink = document.getElementsByClassName("sub-link"), socialbarwaypoint = document.getElementsByTagName("footer")[0];
            for (SocialBar.initWaypoint(socialbarwaypoint), i = 0; i < subscribeLink.length; i++) subscribeLink[i].setAttribute("data-email", i), 
            subscribeLink[i].onclick = function() {
                var unsub = "unsubscribe" === this.value.toLowerCase();
                getEmailValue(this.getAttribute("data-email"), unsub);
            };
            function getEmailValue(index, unsub) {
                var emailInput = document.getElementsByClassName("email-input");
                emailInput.length > index && (setResultText(index, "..."), function(index, emailAdd) {
                    var response = Emails;
                    if ("" === emailAdd) setResultText(index, "Please enter a valid email."); else for (var hasMatch = !1, i = 0; i < response.length; ++i) {
                        var data = response[i];
                        if (data.email == emailAdd) {
                            processResultData(index, hasMatch = !0, emailAdd);
                            break;
                        }
                        processResultData(index, hasMatch, emailAdd), console.log("failure");
                    }
                }(index, emailInput[index].value));
            }
            function processResultData(index, hasMatch, emailAdd) {
                var good = !1, resultText = "";
                "" == emailAdd || 0 == hasMatch ? resultText = "Please enter a valid email." : "" != emailAdd || 1 == hasMatch ? (resultText = 'The email you submitted:<br /><span class="email-span">' + emailAdd + "</span><br /> is already subscribed to receive the Stand-To! email.", 
                good = !0) : resultText = '<span class="fail">You were unable to subscribe. Please try again.</span>', 
                setResultText(index, resultText, good);
            }
            function setResultText(index, result, good) {
                var i, subResults = document.getElementsByClassName("sub-results");
                for (i = 0; i < subResults.length; i++) index && (i == index ? (subResults[i].innerHTML = result, 
                good ? Helper.addClass(subResults[i], "good") : Helper.removeClass(subResults[i], "good")) : (subResults[i].innerHTML = result, 
                Helper.removeClass(subResults[i], "good")));
            }
        }();
    }, {
        "../_data/email-dummy-data/emails.json": 1,
        "./globals/modules/Helper": "Helper",
        "./globals/modules/SocialBar": 5
    } ],
    Helper: [ function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _createClass = function() {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
                    "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function(Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), 
                Constructor;
            };
        }();
        var Helper = function() {
            function Helper() {
                !function(instance, Constructor) {
                    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
                }(this, Helper);
            }
            return _createClass(Helper, null, [ {
                key: "hasClass",
                value: function(el, className) {
                    return el.classList ? el.classList.contains(className) : !!el.className.match(new RegExp("(\\s|^)" + className + "(\\s|$)"));
                }
            }, {
                key: "addClass",
                value: function(el, className) {
                    el.classList ? el.classList.add(className) : this.hasClass(el, className) || (el.className += " " + className);
                }
            }, {
                key: "removeClass",
                value: function(el, className) {
                    if (el.classList) el.classList.remove(className); else if (this.hasClass(el, className)) {
                        var reg = new RegExp("(\\s|^)" + className + "(\\s|$)");
                        el.className = el.className.replace(reg, " ");
                    }
                }
            }, {
                key: "toggleClass",
                value: function(el, className) {
                    this.hasClass(el, className) ? this.removeClass(el, className) : this.addClass(el, className);
                }
            }, {
                key: "randomNumberToken",
                value: function() {
                    return new Date().valueOf();
                }
            } ]), Helper;
        }();
        exports.default = Helper, module.exports = exports.default;
    }, {} ],
    Nav: [ function(require, module, exports) {
        "use strict";
        var Subnav = require("./modules/SubNav"), Helper = require("./modules/Helper");
        !function() {
            var i, navs = document.getElementsByTagName("nav");
            for (i = 0; i < navs.length; i++) Helper.hasClass(navs[i], "dropdown") ? new Subnav(navs[i], !1, {
                persistentLabel: !0
            }) : new Subnav(navs[i]);
        }();
    }, {
        "./modules/Helper": "Helper",
        "./modules/SubNav": 6
    } ],
    Waypoints: [ function(require, module, exports) {
        !function() {
            "use strict";
            var keyCounter = 0, allWaypoints = {};
            function Waypoint(options) {
                if (!options) throw new Error("No options passed to Waypoint constructor");
                if (!options.element) throw new Error("No element option passed to Waypoint constructor");
                if (!options.handler) throw new Error("No handler option passed to Waypoint constructor");
                this.key = "waypoint-" + keyCounter, this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options), 
                this.element = this.options.element, this.adapter = new Waypoint.Adapter(this.element), 
                this.callback = options.handler, this.axis = this.options.horizontal ? "horizontal" : "vertical", 
                this.enabled = this.options.enabled, this.triggerPoint = null, this.group = Waypoint.Group.findOrCreate({
                    name: this.options.group,
                    axis: this.axis
                }), this.context = Waypoint.Context.findOrCreateByElement(this.options.context), 
                Waypoint.offsetAliases[this.options.offset] && (this.options.offset = Waypoint.offsetAliases[this.options.offset]), 
                this.group.add(this), this.context.add(this), allWaypoints[this.key] = this, keyCounter += 1;
            }
            Waypoint.prototype.queueTrigger = function(direction) {
                this.group.queueTrigger(this, direction);
            }, Waypoint.prototype.trigger = function(args) {
                this.enabled && this.callback && this.callback.apply(this, args);
            }, Waypoint.prototype.destroy = function() {
                this.context.remove(this), this.group.remove(this), delete allWaypoints[this.key];
            }, Waypoint.prototype.disable = function() {
                return this.enabled = !1, this;
            }, Waypoint.prototype.enable = function() {
                return this.context.refresh(), this.enabled = !0, this;
            }, Waypoint.prototype.next = function() {
                return this.group.next(this);
            }, Waypoint.prototype.previous = function() {
                return this.group.previous(this);
            }, Waypoint.invokeAll = function(method) {
                var allWaypointsArray = [];
                for (var waypointKey in allWaypoints) allWaypointsArray.push(allWaypoints[waypointKey]);
                for (var i = 0, end = allWaypointsArray.length; i < end; i++) allWaypointsArray[i][method]();
            }, Waypoint.destroyAll = function() {
                Waypoint.invokeAll("destroy");
            }, Waypoint.disableAll = function() {
                Waypoint.invokeAll("disable");
            }, Waypoint.enableAll = function() {
                for (var waypointKey in Waypoint.Context.refreshAll(), allWaypoints) allWaypoints[waypointKey].enabled = !0;
                return this;
            }, Waypoint.refreshAll = function() {
                Waypoint.Context.refreshAll();
            }, Waypoint.viewportHeight = function() {
                return window.innerHeight || document.documentElement.clientHeight;
            }, Waypoint.viewportWidth = function() {
                return document.documentElement.clientWidth;
            }, Waypoint.adapters = [], Waypoint.defaults = {
                context: window,
                continuous: !0,
                enabled: !0,
                group: "default",
                horizontal: !1,
                offset: 0
            }, Waypoint.offsetAliases = {
                "bottom-in-view": function() {
                    return this.context.innerHeight() - this.adapter.outerHeight();
                },
                "right-in-view": function() {
                    return this.context.innerWidth() - this.adapter.outerWidth();
                }
            }, window.Waypoint = Waypoint;
        }();
    }, {} ]
}, {}, [ 9, 3, 5, 10, 6, "Helper" ]);